# order the dilution
results_factor_levels <- c("1nanogram", "point1nanogram", "pointzero1nanogram", "1to10", "1to100")
# then apply this to the CCM data
Cq_values_40$dilution.long <- factor(Cq_values_40$dilution.long, levels=results_factor_levels)
# plot raw Cqs by dilution
ggplot(Cq_values_40, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~dilution.long)
# fill for which primer
# facet breaks up the graph into different components by sample type
# dodge makes each primer have it's own column per value
# plot raw Cqs by infection type
ggplot(Cq_values_40, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~treatment)
# separate out the poked flies
Cq_values_40_poke <- Cq_values_40[which(Cq_values_40$treatment == "16Cq DiNV needle poke"),]
# histogram of just poked flies Cqs separated out by dilution
ggplot(Cq_values_40_poke, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~dilution.long)
# separate out the injected flies
Cq_values_40_inject <- Cq_values_40[which(Cq_values_40$treatment == "16Cq DiNV injection"),]
# histogram of just injected flies Cqs separated out by dilution
ggplot(Cq_values_40_inject, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~dilution.long)
# calculate variences in Cq value
Cq_values_40$Cq_var <- ave(Cq_values_40$Cq, Cq_values_40$unique.name, FUN=var)
# this adds a column with the variances, however because there are 3 replicates for each sample/dilution,
# there are all three columns retained. We want to keep those right now for calculating the mean Cq
# calculate mean in Cq value
Cq_values_40$Cq_mean <- ave(Cq_values_40$Cq, Cq_values_40$unique.name, FUN=mean)
# now want to keep all rows where the replicate is 1
# make into new Df so we keep the original with all the info
Cq_values_40_1rep <- Cq_values_40[which(Cq_values_40$replicate == "1"),]
# histogram of all variances
hist(Cq_values_40_1rep$Cq_var)
# most are very low, but some are worryingly high
# also a lot are missing here because the function wouldn't calculate variences for replicates that had an NA
# I am not sure what to do about those
# is there a difference in variance between the two treatments?
# just poke
Cq_values_40_1rep_poke <- Cq_values_40_1rep[which(Cq_values_40_1rep$treatment == "16Cq DiNV needle poke"),]
# just inject
Cq_values_40_1rep_inject <- Cq_values_40_1rep[which(Cq_values_40_1rep$treatment == "16Cq DiNV injection"),]
# histogram of poke variances
hist(Cq_values_40_1rep_poke$Cq_var)
# histogram of inject variances
hist(Cq_values_40_1rep_inject$Cq_var)
Cq_values_40_1rep_1ng <- Cq_values_40_1rep[which(Cq_values_40_1rep$dilution == "1ng"),]
hist(Cq_values_40_1rep_1ng$Cq_var)
# remove row 97
Cq_values_40 <- Cq_values_40[c(1:96, 98:192),]
# recalculate variances
Cq_values_40$Cq_var <- ave(Cq_values_40$Cq, Cq_values_40$unique.name, FUN=var)
# this adds a column with the variances, however because there are 3 replicates for each sample/dilution,
# there are all three columns retained. We want to keep those right now for calculating the mean Cq
# calculate mean in Cq value
Cq_values_40$Cq_mean <- ave(Cq_values_40$Cq, Cq_values_40$unique.name, FUN=mean)
# now want to keep all rows where the replicate is 2 ( because I removed a replicate 1)
# make into new Df so we keep the original with all the info
Cq_values_40_1rep <- Cq_values_40[which(Cq_values_40$replicate == "2"),]
# just look at variances for the 1ng samples
Cq_values_40_1rep_1ng <- Cq_values_40_1rep[which(Cq_values_40_1rep$dilution == "1ng"),]
hist(Cq_values_40_1rep_1ng$Cq_var)
ggplot(Cq_values_40_1rep_1ng, aes(x=Cq_mean, y=Cq_var)) +
geom_point(size=2, shape=23)
ggplot(Cq_values_40_1rep_1ng, aes(y= Cq_mean, x=primer, fill=treatment)) + geom_boxplot()
# currently the samples are not ordered by the sample, but by the plate, so I need each sample one right after the other
# can I order them by well code?
Cq_values_40_1rep_1ng <- Cq_values_40_1rep_1ng[order(Cq_values_40_1rep_1ng$well.code),]
# remove the control sample
Cq_values_40_1rep_1ng <- Cq_values_40_1rep_1ng[which(Cq_values_40_1rep_1ng$treatment != "none"),]
# yes this worked great, I have the TPI first, then the PIF 3
# Separate that dataframe, incriminating by 2, every number between 1-12 (number of rows in dataframe)
Cq_values_40_1rep_1ng$Cq_mean[seq(1,12,2)] # these are the TPI Cq means
Cq_values_40_1rep_1ng$Cq_mean[seq(2,12,2)] # these are the PIF 3 primer Cq means
# make delta Cq, subtract the PIF 3 value from the TPI primer value
delta_Cqs_1ng <- Cq_values_40_1rep_1ng$Cq_mean[seq(1,12,2)] - Cq_values_40_1rep_1ng$Cq_mean[seq(2,12,2)]
delta_Cqs_1ng
# want to add this as a column to our df, but first need to remove one of the primer rows, so let's remove the PIF3
Cq_values_40_1rep_1ng_Delta <- Cq_values_40_1rep_1ng[which(Cq_values_40_1rep_1ng$primer == "PIF3"),]
# and this should be in the order of delta_Cqs_Stock
Cq_values_40_1rep_1ng_Delta$delta_Cq <- delta_Cqs_1ng
# add another column that is 2^deltaCq
Cq_values_40_1rep_1ng_Delta$delta_Cq_2 <- 2^(delta_Cqs_1ng)
#Plot by treatment
ggplot(Cq_values_40_1rep_1ng_Delta, aes(y= delta_Cq_2, x=treatment, fill=treatment)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3) + scale_fill_manual(values = c('violet', 'cadetblue')) + theme(legend.position = "none")
# calculate the mean of delta_Cq_2 for each treatment
tapply(Cq_values_40_1rep_1ng_Delta$delta_Cq_2, Cq_values_40_1rep_1ng_Delta$treatment, mean)
# calculate the variance of delta_Cq_2 for each treatment
sqrt(tapply(Cq_values_40_1rep_1ng_Delta$delta_Cq_2, Cq_values_40_1rep_1ng_Delta$treatment, var))
# mean for inject is 0.00607
# mean for needle is 0.000728
# this means that the injection gives about 10X as much viral genomes as the needle
# coefficient of variation
# injection
0.0014898800/0.006069361
#0.2454756 as the amount of variation
# needle
0.0005287672/0.0007248124
# 0.7295228 as the amount of variation
# how do these compare
0.7295228/0.2454756
# 2.971875 so the needle is about 3 times more variable?
Cq_values_40_1rep_1_10 <- Cq_values_40_1rep[which(Cq_values_40_1rep$dilution == "1:10"),]
hist(Cq_values_40_1rep_1_10$Cq_var)
ggplot(Cq_values_40_1rep_1_10, aes(x=Cq_mean, y=Cq_var)) +
geom_point(size=2, shape=23)
ggplot(Cq_values_40_1rep_1_10, aes(y= Cq_mean, x=primer, fill=treatment)) + geom_boxplot()
# currently the samples are not ordered by the sample, but by the plate, so I need each sample one right after the other
# can I order them by well code?
Cq_values_40_1rep_1_10 <- Cq_values_40_1rep_1_10[order(Cq_values_40_1rep_1_10$well.code),]
# yes this worked great, I have the TPI first, then the PIF 3
# Separate that dataframe, incriminating by 2, every number between 1-12 (number of rows in dataframe)
Cq_values_40_1rep_1_10$Cq_mean[seq(1,12,2)] # these are the TPI Cq means
Cq_values_40_1rep_1_10$Cq_mean[seq(2,12,2)] # these are the PIF 3 primer Cq means
# make delta Cq, subtract the PIF 3 value from the TPI primer value
delta_Cqs_1_10 <- Cq_values_40_1rep_1_10$Cq_mean[seq(1,12,2)] - Cq_values_40_1rep_1_10$Cq_mean[seq(2,12,2)]
delta_Cqs_1_10
# want to add this as a column to our df, but first need to remove one of the primer rows, so let's remove the PIF3
Cq_values_40_1rep_1_10_Delta <- Cq_values_40_1rep_1_10[which(Cq_values_40_1rep_1_10$primer == "PIF3"),]
# and this should be in the order of delta_Cqs_Stock
Cq_values_40_1rep_1_10_Delta$delta_Cq <- delta_Cqs_1_10
# add another column that is 2^deltaCq
Cq_values_40_1rep_1_10_Delta$delta_Cq_2 <- 2^(delta_Cqs_1_10)
#Plot by treatment
ggplot(Cq_values_40_1rep_1_10_Delta, aes(y= delta_Cq_2, x=treatment, fill=treatment)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3) + scale_fill_manual(values = c('violet', 'cadetblue')) + theme(legend.position = "none")
# calculate the mean of delta_Cq_2 for each treatment
tapply(Cq_values_40_1rep_1_10_Delta$delta_Cq_2, Cq_values_40_1rep_1_10_Delta$treatment, mean)
# calculate the variance of delta_Cq_2 for each treatment
sqrt(tapply(Cq_values_40_1rep_1_10_Delta$delta_Cq_2, Cq_values_40_1rep_1_10_Delta$treatment, var))
# mean for inject is 0.0057
# mean for needle is 0.0055
# this means that the injection gives about 10X as much viral genomes as the needle
# coefficient of variation
# injection
0.0004362141/0.0056649179
# 0.07700272 as the amount of variation
# needle
0.0007610579/0.0005539033
# 1.373991 as the amount of variation
# how do these compare
1.373991/0.07700272
# 17.84341 so the needle is about 18 times more variable?
# add datasets with the 2^detla Cq together
Combo_delta <- rbind(Cq_values_40_1rep_1_10_Delta, Cq_values_40_1rep_1ng_Delta)
# want to do some stats/error bars to this plot
# I think this will do it by both treatment and dilution
stats <- summarySE(Combo_delta, measurevar="delta_Cq_2", groupvars=c("treatment", "dilution"))
stats
# ggplot(Combo_delta, aes(y= delta_Cq_2, x=treatment))  + theme_linedraw() + geom_point(position = position_dodge(width = .9), stat = "identity", size=3, aes(color=dilution)) + ylab("2^delta Cq") + xlab("Injection Treatment") + geom_errorbar( aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se), data = stats, position = position_dodge(width = .9), width = 0.3)
# used https://www.datanovia.com/en/lessons/ggplot-error-bars/
# order x axis
Combo_delta <- Combo_delta %>%
mutate(treatment = factor(treatment, levels = c("16Cq DiNV needle poke", "16Cq DiNV injection")))
legend_title <- "DNA Dilution"
ggplot(Combo_delta, aes(y= delta_Cq_2, x=treatment)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = dilution),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = dilution), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(legend_title,values = c("#62CFF4",  "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.text=element_text(size=14), legend.title=element_text(size=16)) + labs(title = "Comparing Ammount and Variation of DiNV Dose Between Poke and Injection",y = "Relative Amount of DiNV to \nHst Genome", x = "Injection Treatment")
ggplot(Combo_delta, aes(y= delta_Cq_2, x=treatment)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = dilution),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = dilution), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(legend_title,values = c("#62CFF4",  "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.text=element_text(size=14), legend.title=element_text(size=16)) + labs(title = "Comparing Ammount and Variation of DiNV Dose Between Poke and Injection",y = "Relative Amount of DiNV to Hst Genome", x = "Injection Treatment")
ggplot(Combo_delta, aes(y= delta_Cq_2, x=treatment)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = dilution),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = dilution), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(legend_title,values = c("#62CFF4",  "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.text=element_text(size=14), legend.title=element_text(size=16)) + labs(title = "Comparing Ammount and Variation of DiNV Dose Between Poke and Injection",y = "Relative Amount of DiNV to Host Genome", x = "Injection Treatment")
ggplot(Combo_delta, aes(y= delta_Cq_2, x=treatment)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = dilution),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = dilution), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(legend_title,values = c("#62CFF4",  "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.text=element_text(size=14), legend.title=element_text(size=16), title =element_text(size =16)) + labs(title = "Comparing Ammount and Variation of DiNV Dose Between Poke and Injection",y = "Relative Amount of DiNV to Host Genome", x = "Injection Treatment")
ggplot(Combo_delta, aes(y= delta_Cq_2, x=treatment)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = dilution),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = dilution), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(legend_title,values = c("#62CFF4",  "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.text=element_text(size=14), legend.title=element_text(size=16), title =element_text(size =16)) + labs(title = "Comparing Ammount and Variation of DiNV Dose \nBetween Poke and Injection",y = "Relative Amount of DiNV to Host Genome", x = "Injection Treatment")
ggplot(Combo_delta, aes(y= delta_Cq_2, x=treatment)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = dilution),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = dilution), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(legend_title,values = c("#62CFF4",  "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.text=element_text(size=14), legend.title=element_text(size=16), legend.position = "bottom", title =element_text(size =16)) + labs(title = "Comparing Ammount and Variation of DiNV Dose \nBetween Poke and Injection",y = "Relative Amount of DiNV to Host Genome", x = "Injection Treatment")
knitr::opts_chunk$set(dpi=300,fig.width=7, fig.height = 4.5)
ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.position = "none", title =element_text(size =16)) +
scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
labs(title = "Comparing Ammount of DiNV DNA in Extractions \nwith and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type")
library(ggplot2)
library(dplyr)
library(tidyr)
library(Rmisc)
library(rstatix)
knitr::opts_chunk$set(dpi=300,fig.width=7, fig.height = 4.5)
Cq_values <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20240316-exo-2/20240316-exo-2-qPCR.csv")
# if you want to also include another varaible to separate out the histogram by, you can include a facet
ggplot(Cq_values, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~type)
# use the variance function, and calculates the variance in Cq by the unique.name (each sample/primer has 3 Cq values to
# calculate the variance by)
Cq_values$Cq_var <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=var)
# use the mean function, and calculates the mean of Cq values by the unique.name (each sample/primer has 3 Cq values to
# calculate the mean by)
Cq_values$Cq_mean <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=mean)
# Keep all rows where the replicate is 1 (or you could do 2 or 3)
# make into new Df so we keep the original with all the Cq values
Cq_values_1rep <- Cq_values[which(Cq_values$replicate == "1"),]
# histogram of all variances
ggplot(Cq_values_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)
# There is one that is really large, which is that one?
# it is the first sample, which is 19 and the others are 20, I will just remove that one sample
# remove just first row
Cq_values <- Cq_values[c(2:48),]
# redo the varience and means
Cq_values$Cq_var <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=var)
Cq_values$Cq_mean <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=mean)
# keep only 1 replicate, but use 2 becuase I removed a 1
Cq_values_1rep <- Cq_values[which(Cq_values$replicate == "2"),]
# histogram of all variances
ggplot(Cq_values_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)
# much better
# plot variances and means as a scatterplot
ggplot(Cq_values_1rep, aes(x=Cq_mean, y=Cq_var)) +
geom_point(size=2, shape=23)
# no real relationship, looks good
# samples are not ordered properly
# they need to be ordered with the two primer samples next to each other for each sample
# order them by the sample
Cq_values_1rep <- Cq_values_1rep[order(Cq_values_1rep$sample),]
Cq_values_1rep
nrow(Cq_values_1rep)
# Separate that dataframe, incriminating by 2, every number between 1-16 (number of rows in dataframe)
Cq_values_1rep$Cq_mean[seq(1,16,2)] # these are the TPI Cq means
Cq_values_1rep$Cq_mean[seq(2,16,2)] # these are the PIF 3 primer Cq means
# make the delta Cq by subtracting the PIF 3 values from the TPI primer values
# and this is saved as a vector in R
delta_Cqs <- Cq_values_1rep$Cq_mean[seq(1,16,2)] - Cq_values_1rep$Cq_mean[seq(2,16,2)]
#vector
delta_Cqs
# Keep only rows that are PIF3 because now we have two rows per sample
Cq_values1rep_Delta <- Cq_values_1rep[which(Cq_values_1rep$primer == "PIF 3"),]
# And then add in the delta Cqs as a new column
Cq_values1rep_Delta$delta_Cq <- delta_Cqs
# do 2^ delta Cq
Cq_values1rep_Delta$delta_Cq_2 <- 2^(delta_Cqs)
# plot
ggplot(Cq_values1rep_Delta, aes(y= delta_Cq_2, x=type)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3)
# read in delta cqs
First_delta <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20240316-exo-2/20240112-exo-qPCR-delta.csv")
#reset rownames
rownames(First_delta) <- NULL
# remove rows with the clarification pellet
First_delta <- First_delta[c(1:4),]
First_delta <- First_delta[,c(2:6,9:14)]
# combine datasets
complete_sample_delta <- rbind(First_delta, Cq_values1rep_Delta)
complete_sample_delta <- complete_sample_delta %>%
mutate(type = factor(type, levels = c("hirt extract only", "exonuclease treated")))
# statistics on variance
stats <- summarySE(complete_sample_delta, measurevar="delta_Cq_2", groupvars=c("type"))
stats
# plot
legend_title <- "DNA type"
ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.position = "none", title =element_text(size =16)) +
scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
labs(title = "Comparing Ammount of DiNV DNA in Extractions \nwith and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type")
stat.test <- complete_sample_delta %>%
t_test(delta_Cq_2 ~ type) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance("p.adj")
stat.test
# separate hirt only
hirt <- complete_sample_delta[which(complete_sample_delta$type == "hirt extract only"),]
hmean <- mean(hirt$delta_Cq_2)
hmean
# separate hirt
exo <- complete_sample_delta[which(complete_sample_delta$type != "hirt extract only"),]
exmean <- mean(exo$delta_Cq_2)
exmean
ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.position = "none", title =element_text(size =16)) +
scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
labs(title = "Comparing Ammount of DiNV DNA in \nExtractions with and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type")
ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=15.5), legend.position = "none", title =element_text(size =16)) +
scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
labs(title = "Comparing Ammount of DiNV DNA in \nExtractions with and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type")
ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=15.5), legend.position = "none", title =element_text(size =16)) +
scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
labs(title = "Comparing Ammount of DiNV DNA in Extractions \nwith and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type")
ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=15.5), axis.title=element_text(size=16), legend.position = "none", title =element_text(size =16)) +
scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
labs(title = "Comparing Ammount of DiNV DNA in Extractions \nwith and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type")
ggplot(complete_sample_delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.position = "none", title =element_text(size =15.5)) +
scale_x_discrete(labels=c("hirt extract only" = "Hirt Extraction", "exonuclease treated" = "Hirt Extracted and \nExonuclease Treated")) +
labs(title = "Comparing Ammount of DiNV DNA in Extractions \nwith and without Exonuclase V Treatment",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Sample Type")
library(ggplot2)
library(dplyr)
library(tidyr)
library(Rmisc)
library(rstatix)
knitr::opts_chunk$set(dpi=300,fig.width=7, fig.height = 4.5)
# from this test
Cq_values <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20240406-hirt-puregene/20240406-hirt-puregene.csv")
# data from previous qPCR of samples either puregene or hirt extracted
Further_samples <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/20240406-hirt-puregene/other-hirt-and-puregene-dinn-cell-qPCR-samples.csv")
# if you want to also include another varaible to separate out the histogram by, you can include a facet
ggplot(Cq_values, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~type)
# use the variance function, and calculates the variance in Cq by the unique.name (each sample/primer has 3 Cq values to
# calculate the variance by)
Cq_values$Cq_var <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=var)
# use the mean function, and calculates the mean of Cq values by the unique.name (each sample/primer has 3 Cq values to
# calculate the mean by)
Cq_values$Cq_mean <- ave(Cq_values$Cq, Cq_values$unique_name, FUN=mean)
# Keep all rows where the replicate is 1 (or you could do 2 or 3)
# make into new Df so we keep the original with all the Cq values
Cq_values_1rep <- Cq_values[which(Cq_values$replicate == "1"),]
# histogram of all variances
ggplot(Cq_values_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)
# these are all very low compared to qPCR analysis I have done before, so I would say these are ok
# plot variances and means as a scatterplot
ggplot(Cq_values_1rep, aes(x=Cq_mean, y=Cq_var)) +
geom_point(size=2, shape=23)
# no real relationship, looks good
# samples are not ordered properly
# they need to be ordered with the two primer samples next to each other for each sample
# order them by the sample
Cq_values_1rep <- Cq_values_1rep[order(Cq_values_1rep$sample),]
Cq_values_1rep
# looks good, for each sample TPI is first, and PIF 3 is second
nrow(Cq_values_1rep)
# Separate that dataframe, incriminating by 2, every number between 1-16 (number of rows in dataframe)
Cq_values_1rep$Cq_mean[seq(1,16,2)] # these are the TPI Cq means
Cq_values_1rep$Cq_mean[seq(2,16,2)] # these are the PIF 3 primer Cq means
# make the delta Cq by subtracting the PIF 3 values from the TPI primer values
# and this is saved as a vector in R
delta_Cqs <- Cq_values_1rep$Cq_mean[seq(1,16,2)] - Cq_values_1rep$Cq_mean[seq(2,16,2)]
#vector
delta_Cqs
# Keep only rows that are PIF3 because now we have two rows per sample
Cq_values1rep_Delta <- Cq_values_1rep[which(Cq_values_1rep$primer == "PIF 3"),]
# And then add in the delta Cqs as a new column
Cq_values1rep_Delta$delta_Cq <- delta_Cqs
# do 2^ delta Cq
Cq_values1rep_Delta$delta_Cq_2 <- 2^(delta_Cqs)
# simple plot
ggplot(Cq_values1rep_Delta, aes(y= delta_Cq_2, x=type)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3)
# statistics on variance
stats <- summarySE(Cq_values1rep_Delta, measurevar="delta_Cq_2", groupvars=c("type"))
stats
# plot
legend_title <- "DNA type"
ggplot(Cq_values1rep_Delta, aes(y= delta_Cq_2, x=type)) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 3) +
scale_color_manual(legend_title,values = c( "#62CFF4", "#2C67F2" )) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), legend.position = "none") +
labs(title = "Comparing Ammount of DiNV DNA From Extraction Methods",y = "2^delta Cq", x = "DNA Extraction Method") + scale_y_continuous(expand=c(0, 0), limits=c(0, 250))
# if you want to also include another varaible to separate out the histogram by, you can include a facet
ggplot(Further_samples, aes(x= Cq, fill = primer)) + geom_histogram(position = "dodge") + facet_grid(~type)
# use the variance function, and calculates the variance in Cq by the unique.name (each sample/primer has 3 Cq values to
# calculate the variance by)
Further_samples$Cq_var <- ave(Further_samples$Cq, Further_samples$unique_name, FUN=var)
# use the mean function, and calculates the mean of Cq values by the unique.name (each sample/primer has 3 Cq values to
# calculate the mean by)
Further_samples$Cq_mean <- ave(Further_samples$Cq, Further_samples$unique_name, FUN=mean)
# Keep all rows where the replicate is 1 (or you could do 2 or 3)
# make into new Df so we keep the original with all the Cq values
Further_samples_1rep <- Further_samples[which(Further_samples$replicate == "1"),]
# histogram of all variances
ggplot(Further_samples_1rep, aes(x=Cq_var)) + geom_histogram(bins = 50)
# these look pretty great to me, 0.3 is not high
# plot variances and means as a scatterplot
ggplot(Further_samples_1rep, aes(x=Cq_mean, y=Cq_var)) +
geom_point(size=2, shape=23)
# no real relationship, looks good
# samples are not ordered properly
# they need to be ordered with the two primer samples next to each other for each sample
# order them by the sample
Further_samples_1rep <- Further_samples_1rep[order(Further_samples_1rep$sample),]
Further_samples_1rep
# looks good, for each sample TPI is first, and PIF 3 is second
nrow(Further_samples_1rep)
# 24
# Separate that dataframe, incriminating by 2, every number between 1-32 (number of rows in dataframe)
Further_samples_1rep$Cq_mean[seq(1,32,2)] # these are the TPI Cq means
Further_samples_1rep$Cq_mean[seq(2,32,2)] # these are the PIF 3 primer Cq means
# make the delta Cq by subtracting the PIF 3 values from the TPI primer values
# and this is saved as a vector in R
Fdelta_Cqs <- Further_samples_1rep$Cq_mean[seq(1,32,2)] - Further_samples_1rep$Cq_mean[seq(2,32,2)]
#vector
Fdelta_Cqs
# Keep only rows that are PIF3 because now we have two rows per sample
Further_samples_1rep_Delta <- Further_samples_1rep[which(Further_samples_1rep$primer == "PIF 3"),]
# And then add in the delta Cqs as a new column
Further_samples_1rep_Delta$delta_Cq <- Fdelta_Cqs
# do 2^ delta Cq
Further_samples_1rep_Delta$delta_Cq_2 <- 2^(Fdelta_Cqs)
# plot
ggplot(Further_samples_1rep_Delta, aes(y= delta_Cq_2, x=type)) + geom_boxplot()  + theme_linedraw() + geom_point(position="jitter", size=3)
# combine datasets
combo_data <- rbind(Cq_values1rep_Delta,Further_samples_1rep_Delta)
# stats and plot
# statistics on variance
stats2 <- summarySE(combo_data, measurevar="delta_Cq_2", groupvars=c("type"))
stats2
# order x axis
level_order <- c('Puregene', 'hirt')
# plot
legend_title <- "DNA type"
ggplot(combo_data, aes(y= delta_Cq_2, x=factor(type, level = level_order))) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats2, position = position_dodge(0.3), width = 0.2)+
geom_jitter(aes(color=type), position = position_jitter(0.1), size =3)  +
scale_color_manual(legend_title,values = c( "#2C67F2", "#62CFF4" )) +theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), title =element_text(size =16), legend.position = "none") +
labs(title = "Comparing Relative Amount of DiNV DNA From Extraction Methods",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Extraction Method") +
scale_x_discrete(labels=c("hirt" = "Hirt", "Puregene" = "Puregene"))
# doing pairwise t-tests between dilution methods, within each day
# for delta Cq
stat.test <- combo_data %>%
t_test(delta_Cq_2 ~ type) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance("p.adj")
stat.test
# p value is 0.035 significance
# I think this really does depend on how much virus is in the sample and if the method actually works to separate out the viral DNA or not
# separate puregene
pure <- combo_data[which(combo_data$type == "Puregene"),]
pmean <- mean(pure$delta_Cq_2)
pmean
# separate hirt
hirt <- combo_data[which(combo_data$type != "Puregene"),]
hmean <- mean(hirt$delta_Cq_2)
hmean
ggplot(combo_data, aes(y= delta_Cq_2, x=factor(type, level = level_order))) +
geom_errorbar(aes(ymin = delta_Cq_2-se, ymax = delta_Cq_2+se, color = type),data = stats2, position = position_dodge(0.3), width = 0.2)+
geom_jitter(aes(color=type), position = position_jitter(0.1), size =3)  +
scale_color_manual(legend_title,values = c( "#2C67F2", "#62CFF4" )) +theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), title =element_text(size =16), legend.position = "none") +
labs(title = "Comparing Relative Amount of DiNV \nDNA From Extraction Methods",y = "Relative Amount of DiNV to \nHost Genome", x = "DNA Extraction Method") +
scale_x_discrete(labels=c("hirt" = "Hirt", "Puregene" = "Puregene"))
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(Rmisc)
library(rstatix)
knitr::opts_chunk$set(dpi=300,fig.fig.width=7, fig.height = 4.5)
DNA <- read.csv("/Users/maggieschedl/Desktop/Github/Unckless_Lab_Resources/qPCR_analysis/fluid_concentration/fluid_concentration.csv")
# make order of type of sample treatment
DNA$type <- factor(DNA$type, levels=c("raw supernatant", "Sartorius centrifuged", "millipore small centrifuged"))
# get statistics on this for standard error bars
stats <- summarySE(DNA, measurevar="total.DNA", groupvars=c("type"))
stats
# plot
ggplot(DNA, aes(y=total.DNA, x=type, fill=type)) +
geom_errorbar(aes(ymin = total.DNA-se, ymax = total.DNA+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(values = c("#55d0ff","#77aaff", "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), title =element_text(size =16)) + labs(title = "Comparing Yield of DNA from Concentrated Cell Cuture Supernatant",y = "Total DNA (ng)", x = "Sample Treatment")  + theme(legend.position = "none") + scale_y_continuous(
trans = pseudo_log_trans(base = 10), breaks = c(0,10, 50, 100)) + scale_x_discrete(labels=c("raw supernatant" = "Unconcentrated \nSupernatant", "Sartorius centrifuged" = "Sartorius \nCentrifuged", "millipore small centrifuged" = "Sartorius and \nMillipore \nCentrifuged"))
stat.test <- DNA %>%
t_test(total.DNA ~ type) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance("p.adj")
stat.test
# separate supernatant only
sup <- DNA[which(DNA$type == "raw supernatant"),]
supmean <- mean(sup$total.DNA)
supmean
# separate sartorius centrifuged
sart <- DNA[which(DNA$type == "Sartorius centrifuged"),]
smean <- mean(sart$total.DNA)
smean
# separate sartorius and millipore
mill <- DNA[which(DNA$type == "millipore small centrifuged"),]
milmean <- mean(mill$total.DNA)
milmean
# anova looking at relationship between DNA yield and sample type
anov_concentration <- aov(total.DNA ~ type, data = DNA)
summary(anov_concentration)
# post-hoc tukey test to show what the differences are
tukey_concentration <-TukeyHSD(anov_concentration)
tukey_concentration
# plot
ggplot(DNA, aes(y=total.DNA, x=type, fill=type)) +
geom_errorbar(aes(ymin = total.DNA-se, ymax = total.DNA+se, color = type),data = stats, position = position_dodge(0.3), width = 0.2)+
geom_point(aes(color = type), position = position_dodge(0.3), size = 4.5) +
scale_color_manual(values = c("#55d0ff","#77aaff", "#2C67F2")) + theme_light() +
theme(axis.text=element_text(size=14),axis.title=element_text(size=16), title =element_text(size =16)) + labs(title = "Comparing Yield of DNA from Concentrated \nCell Cuture Supernatant",y = "Total DNA (ng)", x = "Sample Treatment")  + theme(legend.position = "none") + scale_y_continuous(
trans = pseudo_log_trans(base = 10), breaks = c(0,10, 50, 100)) + scale_x_discrete(labels=c("raw supernatant" = "Unconcentrated \nSupernatant", "Sartorius centrifuged" = "Sartorius \nCentrifuged", "millipore small centrifuged" = "Sartorius and \nMillipore \nCentrifuged"))
